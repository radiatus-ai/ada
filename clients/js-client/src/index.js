/**
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "./ApiClient";
import APIToken from "./model/APIToken";
import APITokenCreate from "./model/APITokenCreate";
import Chat from "./model/Chat";
import ChatCreate from "./model/ChatCreate";
import ChatMessage from "./model/ChatMessage";
import ChatMessageCreate from "./model/ChatMessageCreate";
import ChatMessageUpdate from "./model/ChatMessageUpdate";
import ChatUpdate from "./model/ChatUpdate";
import Credential from "./model/Credential";
import CredentialCreate from "./model/CredentialCreate";
import CredentialType from "./model/CredentialType";
import CredentialUpdate from "./model/CredentialUpdate";
import HTTPValidationError from "./model/HTTPValidationError";
import PostQuery from "./model/PostQuery";
import ProjectCreate from "./model/ProjectCreate";
import User from "./model/User";
import ValidationError from "./model/ValidationError";
import ValidationErrorLocInner from "./model/ValidationErrorLocInner";
import AuthApi from "./api/AuthApi";
import CredentialsApi from "./api/CredentialsApi";
import MeApi from "./api/MeApi";
import ProjectsApi from "./api/ProjectsApi";
import TokensApi from "./api/TokensApi";

/**
 * JS API client generated by OpenAPI Generator.<br>
 * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
 * <p>
 * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
 * <pre>
 * var PlatformApi = require('index'); // See note below*.
 * var xxxSvc = new PlatformApi.XxxApi(); // Allocate the API class we're going to use.
 * var yyyModel = new PlatformApi.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
 * and put the application logic within the callback function.</em>
 * </p>
 * <p>
 * A non-AMD browser application (discouraged) might do something like this:
 * <pre>
 * var xxxSvc = new PlatformApi.XxxApi(); // Allocate the API class we're going to use.
 * var yyy = new PlatformApi.Yyy(); // Construct a model instance.
 * yyyModel.someProperty = 'someValue';
 * ...
 * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
 * ...
 * </pre>
 * </p>
 * @module index
 * @version 0.1.0
 */
export {
  /**
   * The ApiClient constructor.
   * @property {module:ApiClient}
   */
  ApiClient,

  /**
   * The APIToken model constructor.
   * @property {module:model/APIToken}
   */
  APIToken,

  /**
   * The APITokenCreate model constructor.
   * @property {module:model/APITokenCreate}
   */
  APITokenCreate,

  /**
   * The Chat model constructor.
   * @property {module:model/Chat}
   */
  Chat,

  /**
   * The ChatCreate model constructor.
   * @property {module:model/ChatCreate}
   */
  ChatCreate,

  /**
   * The ChatMessage model constructor.
   * @property {module:model/ChatMessage}
   */
  ChatMessage,

  /**
   * The ChatMessageCreate model constructor.
   * @property {module:model/ChatMessageCreate}
   */
  ChatMessageCreate,

  /**
   * The ChatMessageUpdate model constructor.
   * @property {module:model/ChatMessageUpdate}
   */
  ChatMessageUpdate,

  /**
   * The ChatUpdate model constructor.
   * @property {module:model/ChatUpdate}
   */
  ChatUpdate,

  /**
   * The Credential model constructor.
   * @property {module:model/Credential}
   */
  Credential,

  /**
   * The CredentialCreate model constructor.
   * @property {module:model/CredentialCreate}
   */
  CredentialCreate,

  /**
   * The CredentialType model constructor.
   * @property {module:model/CredentialType}
   */
  CredentialType,

  /**
   * The CredentialUpdate model constructor.
   * @property {module:model/CredentialUpdate}
   */
  CredentialUpdate,

  /**
   * The HTTPValidationError model constructor.
   * @property {module:model/HTTPValidationError}
   */
  HTTPValidationError,

  /**
   * The PostQuery model constructor.
   * @property {module:model/PostQuery}
   */
  PostQuery,

  /**
   * The ProjectCreate model constructor.
   * @property {module:model/ProjectCreate}
   */
  ProjectCreate,

  /**
   * The User model constructor.
   * @property {module:model/User}
   */
  User,

  /**
   * The ValidationError model constructor.
   * @property {module:model/ValidationError}
   */
  ValidationError,

  /**
   * The ValidationErrorLocInner model constructor.
   * @property {module:model/ValidationErrorLocInner}
   */
  ValidationErrorLocInner,

  /**
   * The AuthApi service constructor.
   * @property {module:api/AuthApi}
   */
  AuthApi,

  /**
   * The CredentialsApi service constructor.
   * @property {module:api/CredentialsApi}
   */
  CredentialsApi,

  /**
   * The MeApi service constructor.
   * @property {module:api/MeApi}
   */
  MeApi,

  /**
   * The ProjectsApi service constructor.
   * @property {module:api/ProjectsApi}
   */
  ProjectsApi,

  /**
   * The TokensApi service constructor.
   * @property {module:api/TokensApi}
   */
  TokensApi,
};
