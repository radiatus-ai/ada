/**
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The ChatMessageCreate model module.
 * @module model/ChatMessageCreate
 * @version 0.1.0
 */
class ChatMessageCreate {
  /**
   * Constructs a new <code>ChatMessageCreate</code>.
   * @alias module:model/ChatMessageCreate
   * @param role {String}
   * @param content {String}
   * @param model {String}
   * @param tokens {Number}
   * @param contentRaw {Object}
   * @param chatId {Number}
   */
  constructor(role, content, model, tokens, contentRaw, chatId) {
    ChatMessageCreate.initialize(
      this,
      role,
      content,
      model,
      tokens,
      contentRaw,
      chatId,
    );
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, role, content, model, tokens, contentRaw, chatId) {
    obj["role"] = role;
    obj["content"] = content;
    obj["model"] = model;
    obj["tokens"] = tokens;
    obj["content_raw"] = contentRaw;
    obj["chat_id"] = chatId;
  }

  /**
   * Constructs a <code>ChatMessageCreate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChatMessageCreate} obj Optional instance to populate.
   * @return {module:model/ChatMessageCreate} The populated <code>ChatMessageCreate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChatMessageCreate();

      if (data.hasOwnProperty("role")) {
        obj["role"] = ApiClient.convertToType(data["role"], "String");
      }
      if (data.hasOwnProperty("content")) {
        obj["content"] = ApiClient.convertToType(data["content"], "String");
      }
      if (data.hasOwnProperty("is_context_file")) {
        obj["is_context_file"] = ApiClient.convertToType(
          data["is_context_file"],
          "Boolean",
        );
      }
      if (data.hasOwnProperty("model")) {
        obj["model"] = ApiClient.convertToType(data["model"], "String");
      }
      if (data.hasOwnProperty("tokens")) {
        obj["tokens"] = ApiClient.convertToType(data["tokens"], "Number");
      }
      if (data.hasOwnProperty("content_raw")) {
        obj["content_raw"] = ApiClient.convertToType(
          data["content_raw"],
          Object,
        );
      }
      if (data.hasOwnProperty("is_tool_message")) {
        obj["is_tool_message"] = ApiClient.convertToType(
          data["is_tool_message"],
          "Boolean",
        );
      }
      if (data.hasOwnProperty("chat_id")) {
        obj["chat_id"] = ApiClient.convertToType(data["chat_id"], "Number");
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>ChatMessageCreate</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChatMessageCreate</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of ChatMessageCreate.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error(
          "The required field `" +
            property +
            "` is not found in the JSON data: " +
            JSON.stringify(data),
        );
      }
    }
    // ensure the json data is a string
    if (
      data["role"] &&
      !(typeof data["role"] === "string" || data["role"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `role` to be a primitive type in the JSON string but got " +
          data["role"],
      );
    }
    // ensure the json data is a string
    if (
      data["content"] &&
      !(
        typeof data["content"] === "string" || data["content"] instanceof String
      )
    ) {
      throw new Error(
        "Expected the field `content` to be a primitive type in the JSON string but got " +
          data["content"],
      );
    }
    // ensure the json data is a string
    if (
      data["model"] &&
      !(typeof data["model"] === "string" || data["model"] instanceof String)
    ) {
      throw new Error(
        "Expected the field `model` to be a primitive type in the JSON string but got " +
          data["model"],
      );
    }

    return true;
  }
}

ChatMessageCreate.RequiredProperties = [
  "role",
  "content",
  "model",
  "tokens",
  "content_raw",
  "chat_id",
];

/**
 * @member {String} role
 */
ChatMessageCreate.prototype["role"] = undefined;

/**
 * @member {String} content
 */
ChatMessageCreate.prototype["content"] = undefined;

/**
 * @member {Boolean} is_context_file
 * @default false
 */
ChatMessageCreate.prototype["is_context_file"] = false;

/**
 * @member {String} model
 */
ChatMessageCreate.prototype["model"] = undefined;

/**
 * @member {Number} tokens
 */
ChatMessageCreate.prototype["tokens"] = undefined;

/**
 * @member {Object} content_raw
 */
ChatMessageCreate.prototype["content_raw"] = undefined;

/**
 * @member {Boolean} is_tool_message
 * @default false
 */
ChatMessageCreate.prototype["is_tool_message"] = false;

/**
 * @member {Number} chat_id
 */
ChatMessageCreate.prototype["chat_id"] = undefined;

export default ChatMessageCreate;
