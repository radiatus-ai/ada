/**
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import HTTPValidationError from "../model/HTTPValidationError";
import PostQuery from "../model/PostQuery";

/**
 * Auth service.
 * @module api/AuthApi
 * @version 0.1.0
 */
export default class AuthApi {
  /**
   * Constructs a new AuthApi.
   * @alias module:api/AuthApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the loginGoogleAuthLoginPost operation.
   * @callback module:api/AuthApi~loginGoogleAuthLoginPostCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Login Google
   * @param {module:model/PostQuery} postQuery
   * @param {module:api/AuthApi~loginGoogleAuthLoginPostCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */
  loginGoogleAuthLoginPost(postQuery, callback) {
    let postBody = postQuery;
    // verify the required parameter 'postQuery' is set
    if (postQuery === undefined || postQuery === null) {
      throw new Error(
        "Missing the required parameter 'postQuery' when calling loginGoogleAuthLoginPost",
      );
    }

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = ["application/json"];
    let accepts = ["application/json"];
    let returnType = Object;
    return this.apiClient.callApi(
      "/auth/login",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback,
    );
  }
}
