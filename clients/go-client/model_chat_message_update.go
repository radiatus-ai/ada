/*
Platform API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChatMessageUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatMessageUpdate{}

// ChatMessageUpdate struct for ChatMessageUpdate
type ChatMessageUpdate struct {
	Role NullableString `json:"role,omitempty"`
	Content NullableString `json:"content,omitempty"`
	IsContextFile NullableBool `json:"is_context_file,omitempty"`
	Model NullableString `json:"model,omitempty"`
	Tokens NullableInt32 `json:"tokens,omitempty"`
	ContentRaw map[string]interface{} `json:"content_raw,omitempty"`
	IsToolMessage NullableBool `json:"is_tool_message,omitempty"`
}

// NewChatMessageUpdate instantiates a new ChatMessageUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatMessageUpdate() *ChatMessageUpdate {
	this := ChatMessageUpdate{}
	return &this
}

// NewChatMessageUpdateWithDefaults instantiates a new ChatMessageUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatMessageUpdateWithDefaults() *ChatMessageUpdate {
	this := ChatMessageUpdate{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetRole() string {
	if o == nil || IsNil(o.Role.Get()) {
		var ret string
		return ret
	}
	return *o.Role.Get()
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Role.Get(), o.Role.IsSet()
}

// HasRole returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasRole() bool {
	if o != nil && o.Role.IsSet() {
		return true
	}

	return false
}

// SetRole gets a reference to the given NullableString and assigns it to the Role field.
func (o *ChatMessageUpdate) SetRole(v string) {
	o.Role.Set(&v)
}
// SetRoleNil sets the value for Role to be an explicit nil
func (o *ChatMessageUpdate) SetRoleNil() {
	o.Role.Set(nil)
}

// UnsetRole ensures that no value is present for Role, not even an explicit nil
func (o *ChatMessageUpdate) UnsetRole() {
	o.Role.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetContent() string {
	if o == nil || IsNil(o.Content.Get()) {
		var ret string
		return ret
	}
	return *o.Content.Get()
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Content.Get(), o.Content.IsSet()
}

// HasContent returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasContent() bool {
	if o != nil && o.Content.IsSet() {
		return true
	}

	return false
}

// SetContent gets a reference to the given NullableString and assigns it to the Content field.
func (o *ChatMessageUpdate) SetContent(v string) {
	o.Content.Set(&v)
}
// SetContentNil sets the value for Content to be an explicit nil
func (o *ChatMessageUpdate) SetContentNil() {
	o.Content.Set(nil)
}

// UnsetContent ensures that no value is present for Content, not even an explicit nil
func (o *ChatMessageUpdate) UnsetContent() {
	o.Content.Unset()
}

// GetIsContextFile returns the IsContextFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetIsContextFile() bool {
	if o == nil || IsNil(o.IsContextFile.Get()) {
		var ret bool
		return ret
	}
	return *o.IsContextFile.Get()
}

// GetIsContextFileOk returns a tuple with the IsContextFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetIsContextFileOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsContextFile.Get(), o.IsContextFile.IsSet()
}

// HasIsContextFile returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasIsContextFile() bool {
	if o != nil && o.IsContextFile.IsSet() {
		return true
	}

	return false
}

// SetIsContextFile gets a reference to the given NullableBool and assigns it to the IsContextFile field.
func (o *ChatMessageUpdate) SetIsContextFile(v bool) {
	o.IsContextFile.Set(&v)
}
// SetIsContextFileNil sets the value for IsContextFile to be an explicit nil
func (o *ChatMessageUpdate) SetIsContextFileNil() {
	o.IsContextFile.Set(nil)
}

// UnsetIsContextFile ensures that no value is present for IsContextFile, not even an explicit nil
func (o *ChatMessageUpdate) UnsetIsContextFile() {
	o.IsContextFile.Unset()
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetModel() string {
	if o == nil || IsNil(o.Model.Get()) {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *ChatMessageUpdate) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *ChatMessageUpdate) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *ChatMessageUpdate) UnsetModel() {
	o.Model.Unset()
}

// GetTokens returns the Tokens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetTokens() int32 {
	if o == nil || IsNil(o.Tokens.Get()) {
		var ret int32
		return ret
	}
	return *o.Tokens.Get()
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetTokensOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tokens.Get(), o.Tokens.IsSet()
}

// HasTokens returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasTokens() bool {
	if o != nil && o.Tokens.IsSet() {
		return true
	}

	return false
}

// SetTokens gets a reference to the given NullableInt32 and assigns it to the Tokens field.
func (o *ChatMessageUpdate) SetTokens(v int32) {
	o.Tokens.Set(&v)
}
// SetTokensNil sets the value for Tokens to be an explicit nil
func (o *ChatMessageUpdate) SetTokensNil() {
	o.Tokens.Set(nil)
}

// UnsetTokens ensures that no value is present for Tokens, not even an explicit nil
func (o *ChatMessageUpdate) UnsetTokens() {
	o.Tokens.Unset()
}

// GetContentRaw returns the ContentRaw field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetContentRaw() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ContentRaw
}

// GetContentRawOk returns a tuple with the ContentRaw field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetContentRawOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ContentRaw) {
		return map[string]interface{}{}, false
	}
	return o.ContentRaw, true
}

// HasContentRaw returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasContentRaw() bool {
	if o != nil && !IsNil(o.ContentRaw) {
		return true
	}

	return false
}

// SetContentRaw gets a reference to the given map[string]interface{} and assigns it to the ContentRaw field.
func (o *ChatMessageUpdate) SetContentRaw(v map[string]interface{}) {
	o.ContentRaw = v
}

// GetIsToolMessage returns the IsToolMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ChatMessageUpdate) GetIsToolMessage() bool {
	if o == nil || IsNil(o.IsToolMessage.Get()) {
		var ret bool
		return ret
	}
	return *o.IsToolMessage.Get()
}

// GetIsToolMessageOk returns a tuple with the IsToolMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ChatMessageUpdate) GetIsToolMessageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsToolMessage.Get(), o.IsToolMessage.IsSet()
}

// HasIsToolMessage returns a boolean if a field has been set.
func (o *ChatMessageUpdate) HasIsToolMessage() bool {
	if o != nil && o.IsToolMessage.IsSet() {
		return true
	}

	return false
}

// SetIsToolMessage gets a reference to the given NullableBool and assigns it to the IsToolMessage field.
func (o *ChatMessageUpdate) SetIsToolMessage(v bool) {
	o.IsToolMessage.Set(&v)
}
// SetIsToolMessageNil sets the value for IsToolMessage to be an explicit nil
func (o *ChatMessageUpdate) SetIsToolMessageNil() {
	o.IsToolMessage.Set(nil)
}

// UnsetIsToolMessage ensures that no value is present for IsToolMessage, not even an explicit nil
func (o *ChatMessageUpdate) UnsetIsToolMessage() {
	o.IsToolMessage.Unset()
}

func (o ChatMessageUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatMessageUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Role.IsSet() {
		toSerialize["role"] = o.Role.Get()
	}
	if o.Content.IsSet() {
		toSerialize["content"] = o.Content.Get()
	}
	if o.IsContextFile.IsSet() {
		toSerialize["is_context_file"] = o.IsContextFile.Get()
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	if o.Tokens.IsSet() {
		toSerialize["tokens"] = o.Tokens.Get()
	}
	if o.ContentRaw != nil {
		toSerialize["content_raw"] = o.ContentRaw
	}
	if o.IsToolMessage.IsSet() {
		toSerialize["is_tool_message"] = o.IsToolMessage.Get()
	}
	return toSerialize, nil
}

type NullableChatMessageUpdate struct {
	value *ChatMessageUpdate
	isSet bool
}

func (v NullableChatMessageUpdate) Get() *ChatMessageUpdate {
	return v.value
}

func (v *NullableChatMessageUpdate) Set(val *ChatMessageUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableChatMessageUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableChatMessageUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatMessageUpdate(val *ChatMessageUpdate) *NullableChatMessageUpdate {
	return &NullableChatMessageUpdate{value: val, isSet: true}
}

func (v NullableChatMessageUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatMessageUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
