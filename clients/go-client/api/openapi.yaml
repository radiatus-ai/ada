openapi: 3.1.0
info:
  title: Platform API
  version: 0.1.0
servers:
  - url: /
paths:
  /auth/login:
    post:
      operationId: login_google_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostQuery"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Login Google
      tags:
        - auth
  /me:
    get:
      operationId: read_users_me_me_get
      parameters:
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Read Users Me
      tags:
        - me
  /tokens:
    get:
      operationId: list_api_tokens_tokens_get
      parameters:
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/APIToken"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: List Api Tokens
      tags:
        - tokens
    post:
      operationId: create_api_token_tokens_post
      parameters:
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/APITokenCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIToken"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create Api Token
      tags:
        - tokens
  /tokens/{token_id}:
    delete:
      operationId: delete_api_token_tokens__token_id__delete
      parameters:
        - explode: false
          in: path
          name: token_id
          required: true
          schema:
            title: Token Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIToken"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Delete Api Token
      tags:
        - tokens
  /ada/v1/credentials/:
    get:
      description: Retrieve credentials.
      operationId: read_credentials_ada_v1_credentials__get
      parameters:
        - explode: true
          in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
          style: form
        - explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
          style: form
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Credential"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Read Credentials
      tags:
        - credentials
    post:
      description: Create a new credential.
      operationId: create_credential_ada_v1_credentials__post
      parameters:
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create Credential
      tags:
        - credentials
  /ada/v1/credentials/{credential_id}:
    delete:
      description: Delete a credential.
      operationId: delete_credential_ada_v1_credentials__credential_id__delete
      parameters:
        - explode: false
          in: path
          name: credential_id
          required: true
          schema:
            title: Credential Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Delete Credential
      tags:
        - credentials
    get:
      description: Get a specific credential by ID.
      operationId: read_credential_ada_v1_credentials__credential_id__get
      parameters:
        - explode: false
          in: path
          name: credential_id
          required: true
          schema:
            title: Credential Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Read Credential
      tags:
        - credentials
    put:
      description: Update a credential.
      operationId: update_credential_ada_v1_credentials__credential_id__put
      parameters:
        - explode: false
          in: path
          name: credential_id
          required: true
          schema:
            title: Credential Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CredentialUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Credential"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Update Credential
      tags:
        - credentials
  /ada/v1/projects:
    get:
      operationId: list_projects_ada_v1_projects_get
      parameters:
        - explode: true
          in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
          style: form
        - explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
          style: form
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: List Projects
      tags:
        - projects
    post:
      operationId: create_ada_v1_projects_post
      parameters:
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create
      tags:
        - projects
  /ada/v1/projects/{project_id}/chats:
    get:
      operationId: read_chats_ada_v1_projects__project_id__chats_get
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: true
          in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
          style: form
        - explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
          style: form
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Chat"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Read Chats
      tags:
        - projects
    post:
      operationId: create_chat_ada_v1_projects__project_id__chats_post
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create Chat
      tags:
        - projects
  /ada/v1/projects/{project_id}/chats/{chat_id}:
    delete:
      operationId: delete_chat_ada_v1_projects__project_id__chats__chat_id__delete
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Delete Chat
      tags:
        - projects
    get:
      operationId: read_chat_ada_v1_projects__project_id__chats__chat_id__get
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Read Chat
      tags:
        - projects
    put:
      operationId: update_chat_ada_v1_projects__project_id__chats__chat_id__put
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Update Chat
      tags:
        - projects
  /ada/v1/projects/{project_id}/chats/{chat_id}/messages:
    get:
      operationId: read_chat_messages_ada_v1_projects__project_id__chats__chat_id__messages_get
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: true
          in: query
          name: skip
          required: false
          schema:
            default: 0
            title: Skip
            type: integer
          style: form
        - explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 100
            title: Limit
            type: integer
          style: form
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatMessage"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Read Chat Messages
      tags:
        - projects
    post:
      operationId: create_chat_message_ada_v1_projects__project_id__chats__chat_id__messages_post
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessageCreate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Create Chat Message
      tags:
        - projects
  /ada/v1/projects/{project_id}/chats/{chat_id}/messages/{message_id}:
    delete:
      operationId: delete_chat_message_ada_v1_projects__project_id__chats__chat_id__messages__message_id__delete
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: message_id
          required: true
          schema:
            title: Message Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Delete Chat Message
      tags:
        - projects
    put:
      operationId: update_chat_message_ada_v1_projects__project_id__chats__chat_id__messages__message_id__put
      parameters:
        - explode: false
          in: path
          name: project_id
          required: true
          schema:
            title: Project Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: chat_id
          required: true
          schema:
            title: Chat Id
            type: integer
          style: simple
        - explode: false
          in: path
          name: message_id
          required: true
          schema:
            title: Message Id
            type: integer
          style: simple
        - explode: false
          in: header
          name: x-ada-token
          required: false
          schema:
            title: X-Ada-Token
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatMessageUpdate"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessage"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
        - HTTPBearer: []
      summary: Update Chat Message
      tags:
        - projects
components:
  schemas:
    APIToken:
      example:
        last_used_at: 2000-01-23T04:56:07.000+00:00
        user_id: 6
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        token: token
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
        token:
          title: Token
          type: string
        user_id:
          title: User Id
          type: integer
        created_at:
          format: date-time
          title: Created At
          type: string
        last_used_at:
          format: date-time
          nullable: true
          type: string
      required:
        - created_at
        - id
        - last_used_at
        - name
        - token
        - user_id
      title: APIToken
    APITokenCreate:
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
        - name
      title: APITokenCreate
    Chat:
      example:
        project_id: 0
        name: name
        model: model
        id: 6
      properties:
        name:
          title: Name
          type: string
        model:
          title: Model
          type: string
        project_id:
          title: Project Id
          type: integer
        id:
          title: Id
          type: integer
      required:
        - id
        - model
        - name
        - project_id
      title: Chat
    ChatCreate:
      example:
        project_id: 0
        name: name
        model: model
      properties:
        name:
          title: Name
          type: string
        model:
          title: Model
          type: string
        project_id:
          title: Project Id
          type: integer
      required:
        - model
        - name
        - project_id
      title: ChatCreate
    ChatMessage:
      example:
        content_raw: "{}"
        role: role
        created_at: 2000-01-23T04:56:07.000+00:00
        model: model
        tokens: 0
        id: 1
        is_tool_message: false
        is_context_file: false
        content: content
        chat_id: 6
      properties:
        role:
          title: Role
          type: string
        content:
          title: Content
          type: string
        is_context_file:
          default: false
          title: Is Context File
          type: boolean
        model:
          title: Model
          type: string
        tokens:
          title: Tokens
          type: integer
        content_raw:
          title: Content Raw
          type: object
        is_tool_message:
          default: false
          title: Is Tool Message
          type: boolean
        chat_id:
          title: Chat Id
          type: integer
        id:
          title: Id
          type: integer
        created_at:
          format: date-time
          title: Created At
          type: string
      required:
        - chat_id
        - content
        - content_raw
        - created_at
        - id
        - model
        - role
        - tokens
      title: ChatMessage
    ChatMessageCreate:
      example:
        content_raw: "{}"
        role: role
        model: model
        tokens: 0
        is_tool_message: false
        is_context_file: false
        content: content
        chat_id: 6
      properties:
        role:
          title: Role
          type: string
        content:
          title: Content
          type: string
        is_context_file:
          default: false
          title: Is Context File
          type: boolean
        model:
          title: Model
          type: string
        tokens:
          title: Tokens
          type: integer
        content_raw:
          title: Content Raw
          type: object
        is_tool_message:
          default: false
          title: Is Tool Message
          type: boolean
        chat_id:
          title: Chat Id
          type: integer
      required:
        - chat_id
        - content
        - content_raw
        - model
        - role
        - tokens
      title: ChatMessageCreate
    ChatMessageUpdate:
      example:
        content_raw: "{}"
        role: role
        model: model
        tokens: 0
        is_tool_message: true
        is_context_file: true
        content: content
      properties:
        role:
          nullable: true
          type: string
        content:
          nullable: true
          type: string
        is_context_file:
          nullable: true
          type: boolean
        model:
          nullable: true
          type: string
        tokens:
          nullable: true
          type: integer
        content_raw:
          nullable: true
          type: object
        is_tool_message:
          nullable: true
          type: boolean
      title: ChatMessageUpdate
    ChatUpdate:
      example:
        name: name
        model: model
      properties:
        name:
          nullable: true
          type: string
        model:
          nullable: true
          type: string
      title: ChatUpdate
    Credential:
      example:
        credential_type: api_key
        metadata: "{}"
        organization_id: 6
        name: name
        id: 0
      properties:
        name:
          title: Name
          type: string
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        metadata:
          nullable: true
          type: object
        id:
          title: Id
          type: integer
        organization_id:
          title: Organization Id
          type: integer
      required:
        - credential_type
        - id
        - name
        - organization_id
      title: Credential
    CredentialCreate:
      example:
        credential_type: api_key
        metadata: "{}"
        data: "{}"
        name: name
      properties:
        name:
          title: Name
          type: string
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        metadata:
          nullable: true
          type: object
        data:
          title: Data
          type: object
      required:
        - credential_type
        - data
        - name
      title: CredentialCreate
    CredentialType:
      enum:
        - api_key
        - github_pat
        - gcp_service_account
        - other
      title: CredentialType
      type: string
    CredentialUpdate:
      example:
        credential_type: api_key
        metadata: "{}"
        data: "{}"
        name: name
      properties:
        name:
          nullable: true
          type: string
        credential_type:
          $ref: "#/components/schemas/CredentialType"
        metadata:
          nullable: true
          type: object
        data:
          nullable: true
          type: object
      title: CredentialUpdate
    HTTPValidationError:
      example:
        detail:
          - msg: msg
            loc:
              - ValidationError_loc_inner
              - ValidationError_loc_inner
            type: type
          - msg: msg
            loc:
              - ValidationError_loc_inner
              - ValidationError_loc_inner
            type: type
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
      title: HTTPValidationError
    PostQuery:
      example:
        organization_id: 0
        token: token
      properties:
        token:
          title: Token
          type: string
        organization_id:
          title: Organization Id
          type: integer
      required:
        - organization_id
        - token
      title: PostQuery
    ProjectCreate:
      example:
        organization_id: 0
        name: name
      properties:
        name:
          title: Name
          type: string
        organization_id:
          nullable: true
          type: integer
      required:
        - name
      title: ProjectCreate
    User:
      example:
        google_id: google_id
        organization_id: 6
        id: 0
        email: email
      properties:
        email:
          format: email
          title: Email
          type: string
        google_id:
          title: Google Id
          type: string
        id:
          title: Id
          type: integer
        organization_id:
          nullable: true
          type: integer
      required:
        - email
        - google_id
        - id
      title: User
    ValidationError:
      example:
        msg: msg
        loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: "#/components/schemas/ValidationError_loc_inner"
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
    ValidationError_loc_inner:
      anyOf:
        - type: string
        - type: integer
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
