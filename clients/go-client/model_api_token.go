/*
Platform API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the APIToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIToken{}

// APIToken struct for APIToken
type APIToken struct {
	Name string `json:"name"`
	Id int32 `json:"id"`
	Token string `json:"token"`
	UserId int32 `json:"user_id"`
	CreatedAt time.Time `json:"created_at"`
	LastUsedAt NullableTime `json:"last_used_at"`
}

type _APIToken APIToken

// NewAPIToken instantiates a new APIToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIToken(name string, id int32, token string, userId int32, createdAt time.Time, lastUsedAt NullableTime) *APIToken {
	this := APIToken{}
	this.Name = name
	this.Id = id
	this.Token = token
	this.UserId = userId
	this.CreatedAt = createdAt
	this.LastUsedAt = lastUsedAt
	return &this
}

// NewAPITokenWithDefaults instantiates a new APIToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPITokenWithDefaults() *APIToken {
	this := APIToken{}
	return &this
}

// GetName returns the Name field value
func (o *APIToken) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *APIToken) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *APIToken) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *APIToken) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *APIToken) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *APIToken) SetId(v int32) {
	o.Id = v
}

// GetToken returns the Token field value
func (o *APIToken) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *APIToken) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *APIToken) SetToken(v string) {
	o.Token = v
}

// GetUserId returns the UserId field value
func (o *APIToken) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *APIToken) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *APIToken) SetUserId(v int32) {
	o.UserId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *APIToken) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *APIToken) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *APIToken) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetLastUsedAt returns the LastUsedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *APIToken) GetLastUsedAt() time.Time {
	if o == nil || o.LastUsedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.LastUsedAt.Get()
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *APIToken) GetLastUsedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUsedAt.Get(), o.LastUsedAt.IsSet()
}

// SetLastUsedAt sets field value
func (o *APIToken) SetLastUsedAt(v time.Time) {
	o.LastUsedAt.Set(&v)
}

func (o APIToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["token"] = o.Token
	toSerialize["user_id"] = o.UserId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["last_used_at"] = o.LastUsedAt.Get()
	return toSerialize, nil
}

func (o *APIToken) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"id",
		"token",
		"user_id",
		"created_at",
		"last_used_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAPIToken := _APIToken{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAPIToken)

	if err != nil {
		return err
	}

	*o = APIToken(varAPIToken)

	return err
}

type NullableAPIToken struct {
	value *APIToken
	isSet bool
}

func (v NullableAPIToken) Get() *APIToken {
	return v.value
}

func (v *NullableAPIToken) Set(val *APIToken) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIToken) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIToken(val *APIToken) *NullableAPIToken {
	return &NullableAPIToken{value: val, isSet: true}
}

func (v NullableAPIToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
