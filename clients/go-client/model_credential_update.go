/*
Platform API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CredentialUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialUpdate{}

// CredentialUpdate struct for CredentialUpdate
type CredentialUpdate struct {
	Name NullableString `json:"name,omitempty"`
	CredentialType NullableCredentialType `json:"credential_type,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Data map[string]interface{} `json:"data,omitempty"`
}

// NewCredentialUpdate instantiates a new CredentialUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialUpdate() *CredentialUpdate {
	this := CredentialUpdate{}
	return &this
}

// NewCredentialUpdateWithDefaults instantiates a new CredentialUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialUpdateWithDefaults() *CredentialUpdate {
	this := CredentialUpdate{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialUpdate) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialUpdate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CredentialUpdate) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CredentialUpdate) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CredentialUpdate) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CredentialUpdate) UnsetName() {
	o.Name.Unset()
}

// GetCredentialType returns the CredentialType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialUpdate) GetCredentialType() CredentialType {
	if o == nil || IsNil(o.CredentialType.Get()) {
		var ret CredentialType
		return ret
	}
	return *o.CredentialType.Get()
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialUpdate) GetCredentialTypeOk() (*CredentialType, bool) {
	if o == nil {
		return nil, false
	}
	return o.CredentialType.Get(), o.CredentialType.IsSet()
}

// HasCredentialType returns a boolean if a field has been set.
func (o *CredentialUpdate) HasCredentialType() bool {
	if o != nil && o.CredentialType.IsSet() {
		return true
	}

	return false
}

// SetCredentialType gets a reference to the given NullableCredentialType and assigns it to the CredentialType field.
func (o *CredentialUpdate) SetCredentialType(v CredentialType) {
	o.CredentialType.Set(&v)
}
// SetCredentialTypeNil sets the value for CredentialType to be an explicit nil
func (o *CredentialUpdate) SetCredentialTypeNil() {
	o.CredentialType.Set(nil)
}

// UnsetCredentialType ensures that no value is present for CredentialType, not even an explicit nil
func (o *CredentialUpdate) UnsetCredentialType() {
	o.CredentialType.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialUpdate) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialUpdate) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CredentialUpdate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *CredentialUpdate) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetData returns the Data field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CredentialUpdate) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CredentialUpdate) GetDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *CredentialUpdate) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]interface{} and assigns it to the Data field.
func (o *CredentialUpdate) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o CredentialUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.CredentialType.IsSet() {
		toSerialize["credential_type"] = o.CredentialType.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableCredentialUpdate struct {
	value *CredentialUpdate
	isSet bool
}

func (v NullableCredentialUpdate) Get() *CredentialUpdate {
	return v.value
}

func (v *NullableCredentialUpdate) Set(val *CredentialUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialUpdate(val *CredentialUpdate) *NullableCredentialUpdate {
	return &NullableCredentialUpdate{value: val, isSet: true}
}

func (v NullableCredentialUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
