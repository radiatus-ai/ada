/**
 * Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIToken model module.
 * @module model/APIToken
 * @version 0.1.0
 */
class APIToken {
    /**
     * Constructs a new <code>APIToken</code>.
     * @alias module:model/APIToken
     * @param name {String}
     * @param id {String}
     * @param token {String}
     * @param userId {String}
     * @param createdAt {Date}
     * @param lastUsedAt {Date}
     */
    constructor(name, id, token, userId, createdAt, lastUsedAt) {

        APIToken.initialize(this, name, id, token, userId, createdAt, lastUsedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, id, token, userId, createdAt, lastUsedAt) {
        obj['name'] = name;
        obj['id'] = id;
        obj['token'] = token;
        obj['user_id'] = userId;
        obj['created_at'] = createdAt;
        obj['last_used_at'] = lastUsedAt;
    }

    /**
     * Constructs a <code>APIToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIToken} obj Optional instance to populate.
     * @return {module:model/APIToken} The populated <code>APIToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIToken();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('last_used_at')) {
                obj['last_used_at'] = ApiClient.convertToType(data['last_used_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIToken</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of APIToken.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}

APIToken.RequiredProperties = ["name", "id", "token", "user_id", "created_at", "last_used_at"];

/**
 * @member {String} name
 */
APIToken.prototype['name'] = undefined;

/**
 * @member {String} id
 */
APIToken.prototype['id'] = undefined;

/**
 * @member {String} token
 */
APIToken.prototype['token'] = undefined;

/**
 * @member {String} user_id
 */
APIToken.prototype['user_id'] = undefined;

/**
 * @member {Date} created_at
 */
APIToken.prototype['created_at'] = undefined;

/**
 * @member {Date} last_used_at
 */
APIToken.prototype['last_used_at'] = undefined;






export default APIToken;
