openapi: 3.1.0
info:
  title: Platform API
  version: 0.1.0
paths:
  /messages/{message_id}:
    put:
      tags:
      - messages
      summary: Update Chat Message
      operationId: update_chat_message_messages__message_id__put
      parameters:
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Message Id
      - name: chat_id
        in: query
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - messages
      summary: Delete Chat Message
      operationId: delete_chat_message_messages__message_id__delete
      parameters:
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Message Id
      - name: project_id
        in: query
        required: true
        schema:
          type: string
          format: uuid4
          title: Project Id
      - name: chat_id
        in: query
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /messages/prompt:
    post:
      tags:
      - messages
      summary: Prompt
      operationId: prompt_messages_prompt_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /messages/stream:
    post:
      tags:
      - messages
      summary: Prompt
      operationId: prompt_messages_stream_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostQuery'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chats/{chat_id}:
    get:
      tags:
      - chats
      summary: Read Chat
      operationId: read_chat_chats__chat_id__get
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - chats
      summary: Update Chat
      operationId: update_chat_chats__chat_id__put
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - chats
      summary: Delete Chat
      operationId: delete_chat_chats__chat_id__delete
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chats/{chat_id}/messages:
    post:
      tags:
      - chats
      summary: Create Chat Message
      operationId: create_chat_message_chats__chat_id__messages_post
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - chats
      summary: Read Chat Messages
      operationId: read_chat_messages_chats__chat_id__messages_get
      parameters:
      - name: chat_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Chat Id
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
                title: Response Read Chat Messages Chats  Chat Id  Messages Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /credentials/:
    post:
      tags:
      - credentials
      summary: Create Credential
      description: Create a new credential.
      operationId: create_credential_credentials__post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - credentials
      summary: Read Credentials
      description: Retrieve credentials.
      operationId: read_credentials_credentials__get
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Credential'
                title: Response Read Credentials Credentials  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /credentials/{credential_id}:
    get:
      tags:
      - credentials
      summary: Read Credential
      description: Get a specific credential by ID.
      operationId: read_credential_credentials__credential_id__get
      parameters:
      - name: credential_id
        in: path
        required: true
        schema:
          type: integer
          title: Credential Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - credentials
      summary: Update Credential
      description: Update a credential.
      operationId: update_credential_credentials__credential_id__put
      parameters:
      - name: credential_id
        in: path
        required: true
        schema:
          type: integer
          title: Credential Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - credentials
      summary: Delete Credential
      description: Delete a credential.
      operationId: delete_credential_credentials__credential_id__delete
      parameters:
      - name: credential_id
        in: path
        required: true
        schema:
          type: integer
          title: Credential Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /live/send_message/{message}:
    get:
      tags:
      - live
      summary: Send Message
      operationId: send_message_live_send_message__message__get
      parameters:
      - name: message
        in: path
        required: true
        schema:
          type: string
          title: Message
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects:
    get:
      tags:
      - projects
      summary: List Projects
      operationId: list_projects_projects_get
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - projects
      summary: Create
      operationId: create_projects_post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /projects/{project_id}/chats:
    post:
      tags:
      - projects
      summary: Create Chat
      operationId: create_chat_projects__project_id__chats_post
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
      - projects
      summary: Read Chats
      operationId: read_chats_projects__project_id__chats_get
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid4
          title: Project Id
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
                title: Response Read Chats Projects  Project Id  Chats Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /auth/login:
    post:
      tags:
      - auth
      summary: Login Google
      operationId: login_google_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Body
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /me:
    get:
      tags:
      - me
      summary: Read Users Me
      operationId: read_users_me_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /:
    get:
      summary: Root
      operationId: root__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    Chat:
      properties:
        name:
          type: string
          title: Name
        model:
          type: string
          title: Model
        is_user_default:
          type: boolean
          title: Is User Default
          default: false
        is_starred:
          type: boolean
          title: Is Starred
          default: false
        id:
          type: string
          format: uuid4
          title: Id
        project_id:
          type: string
          format: uuid4
          title: Project Id
      type: object
      required:
      - name
      - model
      - id
      - project_id
      title: Chat
    ChatCreate:
      properties:
        name:
          type: string
          title: Name
        model:
          type: string
          title: Model
        is_user_default:
          type: boolean
          title: Is User Default
          default: false
        is_starred:
          type: boolean
          title: Is Starred
          default: false
      type: object
      required:
      - name
      - model
      title: ChatCreate
    ChatMessage:
      properties:
        role:
          type: string
          title: Role
        content:
          type: string
          title: Content
        is_context_file:
          type: boolean
          title: Is Context File
          default: false
        model:
          type: string
          title: Model
        tokens:
          type: integer
          title: Tokens
        content_raw:
          type: object
          title: Content Raw
        is_tool_message:
          type: boolean
          title: Is Tool Message
          default: false
        chat_id:
          type: string
          format: uuid4
          title: Chat Id
        id:
          type: string
          format: uuid4
          title: Id
      type: object
      required:
      - role
      - content
      - model
      - tokens
      - content_raw
      - chat_id
      - id
      title: ChatMessage
    ChatMessageCreate:
      properties:
        role:
          type: string
          title: Role
        content:
          type: string
          title: Content
        is_context_file:
          type: boolean
          title: Is Context File
          default: false
        model:
          type: string
          title: Model
        tokens:
          type: integer
          title: Tokens
        content_raw:
          type: object
          title: Content Raw
        is_tool_message:
          type: boolean
          title: Is Tool Message
          default: false
        chat_id:
          type: string
          format: uuid4
          title: Chat Id
      type: object
      required:
      - role
      - content
      - model
      - tokens
      - content_raw
      - chat_id
      title: ChatMessageCreate
    ChatMessageUpdate:
      properties:
        role:
          anyOf:
          - type: string
          - type: 'null'
          title: Role
        content:
          anyOf:
          - type: string
          - type: 'null'
          title: Content
        is_context_file:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Context File
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
        tokens:
          anyOf:
          - type: integer
          - type: 'null'
          title: Tokens
        content_raw:
          anyOf:
          - type: object
          - type: 'null'
          title: Content Raw
        is_tool_message:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Tool Message
      type: object
      title: ChatMessageUpdate
    ChatUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        model:
          anyOf:
          - type: string
          - type: 'null'
          title: Model
      type: object
      title: ChatUpdate
    Credential:
      properties:
        name:
          type: string
          title: Name
        credential_type:
          $ref: '#/components/schemas/CredentialType'
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
        id:
          type: string
          format: uuid4
          title: Id
        organization_id:
          type: string
          format: uuid4
          title: Organization Id
      type: object
      required:
      - name
      - credential_type
      - id
      - organization_id
      title: Credential
    CredentialCreate:
      properties:
        name:
          type: string
          title: Name
        credential_type:
          $ref: '#/components/schemas/CredentialType'
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
        data:
          type: object
          title: Data
      type: object
      required:
      - name
      - credential_type
      - data
      title: CredentialCreate
    CredentialType:
      type: string
      enum:
      - api_key
      - github_pat
      - gcp_service_account
      - other
      title: CredentialType
    CredentialUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        credential_type:
          anyOf:
          - $ref: '#/components/schemas/CredentialType'
          - type: 'null'
        metadata:
          anyOf:
          - type: object
          - type: 'null'
          title: Metadata
        data:
          anyOf:
          - type: object
          - type: 'null'
          title: Data
      type: object
      title: CredentialUpdate
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    PostQuery:
      properties:
        prompt:
          type: string
          title: Prompt
        chatId:
          type: string
          format: uuid4
          title: Chatid
      type: object
      required:
      - prompt
      - chatId
      title: PostQuery
    ProjectCreate:
      properties:
        name:
          type: string
          title: Name
        is_user_default:
          type: boolean
          title: Is User Default
          default: false
        organization_id:
          anyOf:
          - type: string
            format: uuid4
          - type: 'null'
          title: Organization Id
      type: object
      required:
      - name
      title: ProjectCreate
    User:
      properties:
        email:
          type: string
          format: email
          title: Email
        google_id:
          type: string
          title: Google Id
        id:
          type: string
          format: uuid4
          title: Id
        organization_id:
          anyOf:
          - type: string
            format: uuid4
          - type: 'null'
          title: Organization Id
      type: object
      required:
      - email
      - google_id
      - id
      title: User
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
