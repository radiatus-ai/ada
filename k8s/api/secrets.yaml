apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-server
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: postgres-server # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_POSTGRES_SERVER # name of the GCPSM secret key
      remoteRef:
        key: API_POSTGRES_SERVER
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-user
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: postgres-user # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_POSTGRES_USER # name of the GCPSM secret key
      remoteRef:
        key: API_POSTGRES_USER
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: postgres-password
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: postgres-password # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_POSTGRES_PASSWORD # name of the GCPSM secret key
      remoteRef:
        key: API_POSTGRES_PASSWORD
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: google-client-id
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: google-client-id # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_GOOGLE_CLIENT_ID # name of the GCPSM secret key
      remoteRef:
        key: API_GOOGLE_CLIENT_ID
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: credential-encryption-key
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: credential-encryption-key # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_CREDENTIAL_ENCRYPTION_KEY # name of the GCPSM secret key
      remoteRef:
        key: API_CREDENTIAL_ENCRYPTION_KEY
---
# these don't need to be secrets
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: otel-service-name
# spec:
#   refreshInterval: 1h # rate SecretManager pulls GCPSM
#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: googlesm # name of the SecretStore (or kind specified)
#   target:
#     name: otel-service-name # name of the k8s Secret to be created
#     creationPolicy: Owner
#   data:
#     - secretKey: API_OTEL_SERVICE_NAME # name of the GCPSM secret key
#       remoteRef:
#         key: API_OTEL_SERVICE_NAME
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: honeycomb-dataset
# spec:
#   refreshInterval: 1h # rate SecretManager pulls GCPSM
#   secretStoreRef:
#     kind: ClusterSecretStore
#     name: googlesm # name of the SecretStore (or kind specified)
#   target:
#     name: honeycomb-dataset # name of the k8s Secret to be created
#     creationPolicy: Owner
#   data:
#     - secretKey: API_HONEYCOMB_DATASET # name of the GCPSM secret key
#       remoteRef:
#         key: API_HONEYCOMB_DATASET
# ---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: otel-exporter-otlp-headers
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: otel-exporter-otlp-headers # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_OTEL_EXPORTER_OTLP_HEADERS # name of the GCPSM secret key
      remoteRef:
        key: API_OTEL_EXPORTER_OTLP_HEADERS
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: honeycomb-api-key
spec:
  refreshInterval: 1h # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: ClusterSecretStore
    name: googlesm # name of the SecretStore (or kind specified)
  target:
    name: honeycomb-api-key # name of the k8s Secret to be created
    creationPolicy: Owner
  data:
    - secretKey: API_HONEYCOMB_API_KEY # name of the GCPSM secret key
      remoteRef:
        key: API_HONEYCOMB_API_KEY
---
